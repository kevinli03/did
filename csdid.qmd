# csdid (did) {.unnumbered}

::: small
staggered, absorbing, binary treatment
:::

The doubly-robust DiD estimator, also called **csdid**, is an estimator for DiD that solves the issues with TWFE in staggered settings. The estimator was proposed by Callaway and Sant'Anna (2021).

The csdid estimator "matches" treated units to control units in correct non-forbidden comparisons. It does this by separating all treated units into groups, grouped by their initial treatment year. Then, it compares each group to the never-treated units, calculating dynamic effects $\tau_{g,t}$ for each group.

::: small
These effects are calculated with adjusted regression, inverse probability weighting, or both combined (called "doubly robust"). Doubly-robust is the default, and should be used unless there are issues.
:::

The $\tau_{g,t}$ can be aggregated into the overall ATT, Dynamic ATT's with all groups combined together, and the overall ATT for each group $g$ separately.

```{r}
#| message: false
#| warning: false

# packages needed:
library(did)
```

<br />

```{r}
#| echo: false
#| warning: false
#| message: false

library(fixest)
data(base_stagg, package = "fixest")
df <- base_stagg
colnames(df) <- c("unit", "time", "cohort", "rel.time", "treated", "te", "covar", "outcome")
df$treat <- ifelse(df$rel.time >= 0, 1, 0)
df$unit <- as.integer(as.factor(df$unit))
```

::: panel-tabset
## Syntax

We use the `att_gt()` function to run the matching process of csdid:

```{r}
#| warning: false
#| message: false

library(did)

m1 = att_gt(
  # required arguments
  yname                   = "outcome",
  tname                   = "time",
  idname                  = "unit",          # must be a integer-variable
  gname                   = "cohort",
  est_method              = "dr",            # change to ipw if you are having issues
  base_period             = "universal",     # do not change
  allow_unbalanced_panel  = T,               # generally good to keep this T
  data                    = df,
  
  # optional arguments
  xformla                 = ~ covar,          # include like formula for regression
  control_group           = "nevertreated",  # use "notyettreated" if sample size is small
  panel                   = T                # change to F if you are using rep. cross-section
)
```

This completes the matching process. We then need to aggregate to obtain the treatment effects.

## Variables

Our dataset `df` should be a panel or repeated cross-section, and have the following variables:

+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Variable       | Description                                                                                                                                                                                                                |
+================+============================================================================================================================================================================================================================+
| `unit`         | A variable indicating the units/individual an observation belongs to in our data.\* [For csdid, this must be integers]{.underline}.                                                                                        |
|                |                                                                                                                                                                                                                            |
|                | For repeated cross section data, you do not need this variable.                                                                                                                                                            |
+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `time`         | A variable indicating time-periods in our study for each observation.                                                                                                                                                      |
+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `outcome`      | Outcome variable for each observation.                                                                                                                                                                                     |
+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `covar`        | (optional) covariate(s) to condition for parallel trends.                                                                                                                                                                  |
+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `first.treat`  | This variable indicates the initial year of treatment adoption for each unit. For the never-treated, we should set the value of `first.treat` to a very large positive/negative value that is outside the range of `time`. |
+----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

::: small
\*For repeated cross-section, the `unit` variable should be instead the group/level of which treatment is assigned. For example, if treatment is assigned by county/state, use that as the `unit` variable.
:::

Note for csdid, the `unit` variable must be an integer, not a character variable. You can ensure it is an integer with the following code:

```{r}
#| eval: false
df$unit = as.integer(as.factor(df$unit))
```

## Notes

For csdid, the `unit` variable must be an integer, not a character variable. You can ensure it is an integer with the following code:

```{r}
#| eval: false
df$unit = as.integer(as.factor(df$unit))
```

The argument `panel =` should be set to `F` if you are using repeated-cross section data. This will automatically turn off the `idname =` argument as well.

If your sample size is small, set the argument `control_group =` to `"notyettreated"`.

If you are having issues with irreversable matrices and collinearity, change `est_method =` to `"ipw"`. This will use the inverse probability weighting estimation method only.

Research has shown that there are issues if `base_period =` is not set to `"universal"`, so do not change this.

The argument `allow_unbalanced_panel =` essentially allows for some units to have observations not in all time periods. Allowing this to be true will increase sample size. However, we should ask why some units do not have observations in certain years.
:::

<br />

After completing the matching process, we can aggregate our effects into an overall ATT, dynamic ATTs, calendar ATTs, and cohort-ATTs.

::: panel-tabset
## ATT

We use the `aggte()` function to aggregate our matched treatment effects into an overall treatment effect.

```{r}
#| comment: "#>"
#| class-output: r

att = aggte(
  MP    = m1,        # model from att_gt
  type  = "simple",  # this tells R aggregate for ATT
  na.rm = T
)

summary(att)
```

## Dynamic

We can estimate dynamic treatment effects with the `aggte()` function:

```{r}
#| comment: "#>"
#| class-output: r

dynamic = aggte(
  MP     = m1,         # model from att_gt
  type   = "dynamic",  # this tells R aggregate for dynamic effects
  na.rm  = T
)
```

We can then plot these effects with the `ggdid()` function included in the **did** package:

```{r}
#| fig-height: 3.5
#| message: false
#| fig-align: center

ggdid(
  # required arguments
  object  = dynamic,              # input your object from aggte
  
  # optional arguments
  xlab    = "Time to Treatment",  # x-axis label
  ylab    = "Dynamic ATT",        # y-axis label
  title   = "Dynamic Effects"     # you can include a title string if you want
)
```

## Cohort

If we are interested in how the ATT differs by year of treatment adoption, we can also aggregate effects by initial treatment period group:

```{r}
#| comment: "#>"
#| class-output: r

group = aggte(
  MP     = m1,    # model from att_gt
  type   = "group",  # this tells R aggregate for dynamic effects
  na.rm  = T
)
```

We can then plot these effects with the **ggdid** function included in the **did** package:

```{r}
#| fig-height: 3
#| fig-align: center

ggdid(
  # required arguments
  object  = group,           # input your object from aggte
  
  # optional arguments
  xlab    = "ATT Estimate",  # x-axis label
  ylab    = "Group",         # y-axis label
  title   = "Group ATT"      # you can include a title string if you want
)
```

## Calendar

We can also explore how treatment effects change over calendar time (not relative time, but actual time).

```{r}
#| comment: "#>"
#| class-output: r

time = aggte(
  MP     = m1,       # model from att_gt
  type   = "calendar",  # this tells R aggregate for dynamic effects
  na.rm  = T
)
```

We can then plot these effects with the **ggdid** function included in the **did** package:

```{r}
#| fig-height: 3
#| fig-align: center

ggdid(
  # required arguments
  object = time,               # input your object from aggte
  
  # optional arguments
  xlab   = "Time Period",      # x-axis label
  ylab   = "Estimate",         # y-axis label
  title  = "Calendar Effects"  # you can include a title string if you want
)
```
:::

<br />

**Additional Resources**

Callaway, B. and Sant'Anna, P. H. C. (2021) 'Difference-in-Differences with multiple time periods', *Journal of Econometrics*, 225(2), pp. 200-230. Available at: <https://psantanna.com/files/Callaway_SantAnna_2020.pdf>.

*Additional Links*:

-   Long [vignette](https://bcallaway11.github.io/did/articles/TWFE.html) on the issues with TWFE and the csdid framework.
-   did package [documentation for att_gt()](https://bcallaway11.github.io/did/reference/att_gt.html).
-   did package [documentation for aggte()](https://bcallaway11.github.io/did/reference/aggte.html).
-   did package [documentation for ggdid()](https://bcallaway11.github.io/did/reference/ggdid.MP.html).
-   Asjad Naqvi [page on did](https://asjadnaqvi.github.io/DiD/docs/code_r/07_did_r/).
