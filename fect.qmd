# fect {.unnumbered}

::: small
non-staggered or staggered, absorbing or non-absorbing, binary treatment
:::

The fixed-effects counterfactual estimator (fect) is an estimator for DiD proposed by Liu, Xu, and Wang (2024). The estimator uses potential outcomes - for treated units $D_{it} = 1$, the potential outcome $Y_{it}(0)$ is a counterfactual we do not observe. Imputation estimators try to estimate $Y_{it}(0)$, which allows us to compute individual treatment effects $\tau_i$ and find the ATT:

$$
Y_{it}(0) = \underbrace{\alpha_i + \gamma_t}_\text{fixed effects} + \cov + \eps_{it}
$$

::: small
This is literally a TWFE model with $D_{it} = 0$, which is the case for potential outcome $Y_{it}(0)$.
:::

1.  **fect**: this is what is described above.
2.  **IFEct** (interactive fixed effects counterfactual): This is the above model for $Y_{it}(0)$, but with the inclusion of latent trends. More simply, this allows IFEct to be more robust to minor parallel trends violations.
3.  **MC** (matrix completion). This is a machine-learning based approach of estimating $Y_{it}(0)$ that does not rely on fixed-effects. More simply, this allows MC to be more robust to minor parallel trends violations.

::: small
You should generally run a FEct model first - and check if parallel trends are met. If parallel trends are violated, you should test IFEct and MC and see if parallel trends are met in those estimators.
:::

```{r}
#| message: false
#| warning: false

# packages needed:
library(fect)
```

<br />

```{r}
#| echo: false
#| warning: false
#| message: false

library(fixest)
data(base_stagg, package = "fixest")
df <- base_stagg
colnames(df) <- c("id", "time", "cohort", "rel.time", "treated", "te", "covar", "outcome")
df$treat <- ifelse(df$rel.time >= 0, 1, 0)
```

::: panel-tabset
## Syntax

We use the `fect()` function to estimate fect, ifect, and mc models.

```{r}
#| comment: "#>"
#| class-output: r
#| message: false
#| warning: false

m1 = fect(
  # required arguments
  formula  = outcome ~ treat + covar,  # covar is optional
  data     = df,
  index    = c("id", "time"),          # unit and time var
  method   = "fe",                     # use "fe", "ife", or "mc"
  
  # optional arguments
  CV       = F,                        # change to T for "ife" or "mc"
  se       = T,                        # don't change
  nboots   = 40,                       # usually you should use 200, larger is slower
  seed     = 1239                      # any number will work
)

m1 |> print()
```

The output contains two different ATT estimates. It is typically conventional to use the first one, `Tr obs equally weighted`, which weights each observation $it$ equally (rather than the second which weights all $i$ equally).

## Variables

Our dataset `df` should be a panel or repeated cross-section, and have the following variables:

| Variable  | Description                                                                         |
|------------------|------------------------------------------------------|
| `id`      | A variable indicating the units/individual an observation belongs to in our data.\* |
| `time`    | A variable indicating time-periods in our study for each observation.               |
| `outcome` | Outcome variable for each observation.                                              |
| `covar`   | (optional) covariate(s) to condition for parallel trends.                           |

::: small
\*For repeated cross-section, the `id` variable should be instead the group/level of which treatment is assigned. For example, if treatment is assigned by county/state, use that as the `id` variable.
:::
:::

<br />

The fect package allows for a variety of plotting to illustrate our treatment effects. These options work with fe, ife, or mc. The fect package also contains two additional diagonistics to test for parallel trends

::: panel-tabset
## Dynamic

The fect package allows quick aggregation of dynamic effects through plotting. The plot is a ggplot object, if you want to change or make additions to it.

```{r}
#| message: false
#| fig-height: 3.5
#| fig-align: center

m1 |> plot(
  start0  = T,                            # don't change
  main    = "Dynamic Treatment Effects",  # title
  ylab    = "Estimate",                   # y-axis label
  xlab    = "Time to Treatment",          # x-axis label
  xlim    = c(-7, 7)                      # what time periods to include (offset by +1)
)
```

## Calendar

We can explore how treatment effects change over calendar time (not relative time, but actual time).

```{r}
#| message: false
#| fig-height: 3.5
#| fig-align: center

m1 |> plot(
  start0  = T,                             # don't change
  type    = "calendar",                    # don't change
  main    = "Calendar Treatment Effects",  # title
  ylab    = "Estimate",                    # y-axis label
  xlab    = "Time Period",                 # x-axis label
  xlim    = c(1, 10)                       # what time periods to include (offset by +1)
)
```

## Individual

We can also explore the distributions of individual treatment effects by relative time period:

```{r}
#| message: false
#| fig-height: 3.5
#| fig-align: center

m1 |> plot(
  start0  = T,                               # don't change
  type    = "box",                           # don't change
  main    = "Individual Treatment Effects",  # title
  ylab    = "Estimate",                      # y-axis label
  xlab    = "Time to Treatment",             # x-axis label
  xlim    = c(-7, 7)                         # what time periods to include (offset by +1)
)
```

## Parallel Trends

The fect package contains tools to more rigorously test the parallel trends assumption.

```{r}
#| message: false
#| fig-height: 4.5
#| fig-align: center

m1 |> plot(
  start0      = T,                         # don't change
  type        = "equiv",
  bound       = "equiv",
  pre.period  = c(-4, 0),                  # how many pre-treat coef to test
  main        = "Parallel Trends Tests",   # title
  ylab        = "Estimate",                # y-axis label
  xlab        = "Time to Treatment",       # x-axis label
  xlim        = c(-7, 7)                   # what time periods to include (offset by +1)
)
```

An F-test tests if the joint combination of pre-treatment coefficients is statistically significantly different than 0. Since we do not want the coefficients to be different than 0, we want to get a high p-value and fail to reject the null.

An Equivalence (TOST) test tests if the confidence intervals of our pre-treatment coefficients are within 0.36 standard deviations of the outcome variable of 0. Essentially, it tests if there is a substantively significant deviation in parallel trends
:::

<br />

**Additional Resources**

Liu, L., Wang, Y., and Xu, Y. (2024) 'A Practical Guide to Counterfactual Estimators for Causal Inference with Time-Series Cross-Sectional Data', *American Journal of Political Science*, 68(1), pp. 160-176. Available at: <https://yiqingxu.org/papers/english/2022_fect/LWX2022.pdf>

Borusyak, K., Jaravel, X., and Spiess, J. (2024) 'Revisiting Event-Study Designs: Robust and Efficient Estimation', *The Review of Economic Studies*, 91(6), pp. 3253-3285. Available at: <https://arxiv.org/abs/2108.12419>.

*Additional Links*

-   Yiqing Xu's [page on Fect](https://yiqingxu.org/packages/fect/02-fect.html).
-   Yiqing Xu's page on [Fect plot options](https://yiqingxu.org/packages/fect/03-plots.html).
-   R-[documentation of the fect package](https://cran.r-project.org/web/packages/fect/fect.pdf).

*More on Other Imputation Estimators*

-   Kyle Butts' github page on [DIDimputation](https://github.com/kylebutts/didimputation).
-   Kyle Butts' [github page on did2s](https://kylebutts.github.io/did2s/articles/Two-Stage-Difference-in-Differences.html).
-   Asjad Naqvi's [github page on did2s](https://asjadnaqvi.github.io/DiD/docs/code_r/07_did2s_r/).
